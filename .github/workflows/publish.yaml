name: Build and publish package
on:
  push:
    branches:
      - main
jobs:
  build-and-publish:
    name: Build and publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      ARTIFACT_REPOSITORY: ${{ secrets.ARTIFACT_REPOSITORY }}
      ARTIFACT_REPOSITORY_LOCATION: ${{ secrets.ARTIFACT_REPOSITORY_LOCATION }}
      TAG: latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment
        run: |
          python -m pip install --upgrade pip poetry twine wheel virtualenv keyring "keyrings.google-artifactregistry-auth"

      # Setup gcloud CLI for GitHub Actions
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
          project_id: ${{ env.PROJECT_ID }}
          export_environment_variables: true
          create_credentials_file: true

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Build local package
        run: |
          python3 -m build

      - name: Publish package to GCP Artifact Registry
        run: |
          gcloud config set artifacts/repository ${{env.ARTIFACT_REPOSITORY}}
          gcloud config set artifacts/location ${{env.ARTIFACT_REPOSITORY_LOCATION}}
          python3 -m twine upload --repository-url https://${{env.ARTIFACT_REPOSITORY_LOCATION}}-python.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPOSITORY }}/ dist/*
